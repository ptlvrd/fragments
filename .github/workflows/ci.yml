name: ci

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    name: ESLint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

  dockerfile-lint:
    name: Dockerfile Lint
    runs-on: ubuntu-latest
    steps:
      # https://github.com/marketplace/actions/hadolint-action
      - uses: actions/checkout@v4
      - uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile
  
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run unit tests
        run: npm test

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
       - name: Copy .env
        run: cp .env .env

      - name: Print .env
        run: cat .env

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'
      - name: Install node dependencies
        # NOTE: we need to install dev dependencies too vs. production only for hurl
        run: npm install
      - name: Build Containers
        run: docker compose up -d
      - name: Wait for containers to be ready
        run: sleep 30
      - name: Setup Local AWS Resources
        # Use comprehensive Node.js script for both S3 and DynamoDB
        run: node scripts/setup-aws-resources.js
      - name: Verify DynamoDB table
        run: node scripts/verify-dynamodb.js
      - name: Wait for server to be ready
        run: |
          timeout 60 bash -c 'until curl -f http://localhost:8080/; do sleep 2; done'
      - name: Check server logs
        run: docker logs fragments-fragments-1
      - name: Run Hurl Tests
        run: npm run test:integration

  docker-hub:
    name: Build and Push to Docker Hub
    # Don't bother running this job unless the other four all pass
    needs: [lint, dockerfile-lint, unit-tests, integration-tests]
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        env:
          DOCKERHUB_REPO: ptlvrd027/fragments
          SHA_TAG: sha-${{ github.sha }}
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ env.DOCKERHUB_REPO }}:${{ env.SHA_TAG }},${{ env.DOCKERHUB_REPO }}:main,${{ env.DOCKERHUB_REPO }}:latest

